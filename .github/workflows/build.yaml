# GitHub Actions workflow file.
#
# For more information, visit
# https://docs.github.com/actions/learn-github-actions.

---
name: build

# Trigger workflow on any push or pull request.
on:
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - "**"

jobs:
  format:
    name: Check code with formatter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
      - name: Install Node interpreter
        uses: actions/setup-node@v2
        with:
          node-version: 18
      - name: Install Prettier formatter
        run: npm install -g prettier
      - name: Check configuration file formatting
        run: prettier --check .

  lint-backend:
    name: Check backend code with linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
      - name: Install Python interpreter
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Cache Python packages
        uses: actions/cache@v2
        with:
          path: backend/.venv
          key: python-3.10_poetry-${{ hashFiles('poetry.lock') }}
      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip poetry setuptools wheel
          poetry config virtualenvs.in-project true
          poetry install -v
      - name: Lint code
        run: |
          poetry run black --check .
          poetry run flake8 .
          poetry run mypy .

  lint-chart:
    name: Check chart code with linters
    defaults:
      run:
        working-directory: chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
      - name: Lint Dockerfiles
        uses: hadolint/hadolint-action@v2.1.0
        with:
          recursive: true
      - name: Install Helm
        uses: azure/setup-helm@v1
      - name: Install Helm plugins
        run: |
          helm plugin install https://github.com/datreeio/helm-datree
      - name: Lint code
        run: |
          helm lint --strict
          helm datree test --no-record --verbose . -- --values values_local.yaml

  lint-frontend:
    name: Check frontend code with linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
      - name: Install Node interpreter
        uses: actions/setup-node@v2
        with:
          node-version: 18
      - name: Cache Node packages
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-18_npm-${{ hashFiles('package-lock.json') }}
      - name: Install Node packages
        run: npm ci
      - name: Lint code
        run: npm run lint:test

  test-unit:
    # GitHub contains function does not support literal arrays. For more
    # information, visit
    # https://github.community/t/passing-an-array-literal-to-contains-function-causes-syntax-error/17213.
    if: >-
      ${{ !contains(fromJson('["refs/heads/develop", "refs/heads/main",
      "refs/heads/master"]'), github.ref) }}
    name: Run unit test suite for Node 18.10 and Python 3.10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
      - name: Install Python interpreter
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Cache Python packages
        uses: actions/cache@v2
        with:
          path: .venv
          key: >-
            python-3.10_poetry-${{ hashFiles('poetry.lock') }}
      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip poetry setuptools wheel
          poetry config virtualenvs.in-project true
          poetry install -v
      - name: Install Node interpreter
        uses: actions/setup-node@v2
        with:
          node-version: "18.10"
      - name: Cache Node packages
        uses: actions/cache@v2
        with:
          path: node_modules
          key: >-
            node-18.10_npm-${{ hashFiles('package-lock.json') }}
      - name: Install Node packages
        run: npm ci
      - name: Build frontend assets
        run: npm run build
      - name: Run test suite
        run: poetry run pytest --cov
