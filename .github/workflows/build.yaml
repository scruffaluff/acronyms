# GitHub Actions workflow file.
#
# For more information, visit
# https://docs.github.com/actions/learn-github-actions.

---
name: build

# Makes workflow run on any push or pull request.
on:
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - "**"
  workflow_dispatch:
    inputs:
      debug:
        default: false
        description: Use Tmate session for debugging
        type: boolean
      job:
        default: test
        description: CI job to run
        options:
          - backend
          - chart
          - frontend
          - test
        type: choice

env:
  NPM_CONFIG_CACHE: "${{ github.workspace }}/.cache/npm"
  PIP_CACHE_DIR: "${{ github.workspace }}/.cache/pip"
  PIP_DISABLE_PIP_VERSION_CHECK: "true"
  PIP_ROOT_USER_ACTION: ignore
  POETRY_CACHE_DIR: "${{ github.workspace }}/.cache/pypoetry"
  POETRY_VIRTUALENVS_IN_PROJECT: "true"
  PYTHON_KEYRING_BACKEND: "keyring.backends.null.Keyring"

jobs:
  backend:
    if: >-
      ${{ github.event_name != 'workflow_dispatch' || inputs.job ==
      'lint-backend' }}
    name: Check backend code with linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: |
            .cache
            .venv
          key: >-
            python-3.10_${{ runner.os }}_poetry-${{ hashFiles('poetry.lock') }}
      - name: Install Python interpreter
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Python packages
        run: |
          python --version
          python -m pip --version
          python -m pip install poetry
          poetry lock --check
          poetry install --verbose
      - name: Run linter checks
        run: |
          poetry run bandit -ilr src
          poetry run black --check .
          poetry run flake8 .
          poetry run mypy .
          poetry build
      - name: Setup Tmate session if debug enabled
        if: >-
          ${{ always() && github.event_name == 'workflow_dispatch' &&
          inputs.debug }}
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  chart:
    name: Check chart code with linters
    defaults:
      run:
        working-directory: src/chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Install Helm
        uses: azure/setup-helm@v3
      - name: Install Hadolint and Helm
        run: |
          sudo curl --location --output /usr/local/bin/hadolint \
            https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
          sudo chmod 755 /usr/local/bin/hadolint
          hadolint --version
          curl --fail --location --show-error --silent \
            https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm version
          helm plugin install https://github.com/datreeio/helm-datree
          helm datree version
      - name: Run linter checks
        run: |
          hadolint Dockerfile Dockerfile.dev
          helm lint --strict
          helm datree test --no-record --verbose . -- --values values_local.yaml
      - name: Setup Tmate session if debug enabled
        if: >-
          ${{ always() && github.event_name == 'workflow_dispatch' &&
          inputs.debug }}
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  frontend:
    name: Check frontend code with linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Cache Node packages
        uses: actions/cache@v3
        with:
          path: |
            .cache
            node_modules
          key: >-
            node-20_${{ runner.os }}_npm-${{ hashFiles('package-lock.json') }}
      - name: Install Node interpreter
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install Node packages
        run: |
          node --version
          npm --version
          npm ci
      - name: Run linter checks
        run: |
          npm run format:test
          npm run lint:test
          npm run build
      - name: Setup Tmate session if debug enabled
        if: >-
          ${{ always() && github.event_name == 'workflow_dispatch' &&
          inputs.debug }}
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3

  test:
    name: Run unit test suite for Node 20 and Python 3.10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Cache packages
        uses: actions/cache@v3
        with:
          path: |
            .cache
            .venv
            node_modules
          key: >-
            node-20_python-3.10_${{ runner.os }}_npm-${{
            hashFiles('package-lock.json') }}_poetry-${{
            hashFiles('poetry.lock') }}
      - name: Install Node interpreter
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install Node packages
        run: |
          node --version
          npm --version
          npm ci
      - name: Install Python interpreter
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Python packages
        run: |
          python --version
          python -m pip --version
          python -m pip install poetry
          poetry lock --check
          poetry install --verbose
          poetry run playwright install --with-deps chromium
      - name: Run test suite
        run: poetry run pytest --build --cov
      - name: Upload Playwright screenshots and videos if tests fail
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-captures
          path: tests/results
          retention-days: 30
      - name: Setup Tmate session if debug enabled
        if: >-
          ${{ always() && github.event_name == 'workflow_dispatch' &&
          inputs.debug }}
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3
