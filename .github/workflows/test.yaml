# GitHub Actions workflow file.
#
# For more information, visit
# https://docs.github.com/actions/learn-github-actions.

name: test

# Trigger workflow on push or pull request to the main branche.
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      debug:
        default: "false"
        description: Use TMate session for debugging on failure
        required: false

jobs:
  chart:
    name: Run Helm chart test suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Install Python interpreter
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Cache Python packages
        uses: actions/cache@v2
        with:
          path: .venv
          key: >-
            python-3.10_poetry-${{ hashFiles('poetry.lock') }}
      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip poetry setuptools wheel
          poetry config virtualenvs.in-project true
          poetry install -v
      - name: Install browser and open to create security database
        run: |
          poetry run playwright install --with-deps chromium
          poetry run python scripts/open_browser.py
      - name: Install dependencies
        run: |
          bash scripts/install_dependencies.sh
          mkcert -install
      - name: Create K3d Kubernetes cluster
        run: bash scripts/create_cluster.sh
      - name: Build and push Docker images
        run: |
          image='registry.localhost:5001/scruffaluff/acronyms:latest'
          docker build -t "${image}" .
          docker push "${image}"
      - name: Deploy Helm release and wait for pods to become ready
        run: |
          helm --namespace acronyms install \
            --values chart/values_ci.yaml \
            acronyms ./chart
          kubectl --namespace acronyms wait \
            --for=condition=ready pods \
            --selector=app.kubernetes.io/name=acronyms \
            --timeout=300s
      - name: Run Helm chart test suite
        run: |
          export REQUESTS_CA_BUNDLE="$(mkcert -CAROOT)/rootCA.pem"
          poetry run pytest --chart -m e2e
      - name: Upload Playwright screenshots and videos if tests fail
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-captures
          path: tests/results
          retention-days: 30
      - name: Setup tmate session if job failed
        if: >-
          ${{ failure() && github.event_name == 'workflow_dispatch' &&
          github.event.inputs.debug == 'true' }}
        timeout-minutes: 60
        uses: mxschmitt/action-tmate@v3
