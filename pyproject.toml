# Python configuration file for building, dependencies, and tooling.
#
# For more information, visit
# https://snarky.ca/what-the-heck-is-pyproject-toml/.

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.black]
extend-exclude = "^/template"
line-length = 80

[tool.coverage.report]
exclude_lines = [
    "if sys.version_info.*",
    "pragma: no cover",
    "raise NotImplementedError",
]
show_missing = true

[tool.coverage.run]
branch = true
command_line = "-m pytest"
omit = []
source = ["acronyms"]

[tool.poetry]
authors = ["Macklan Weinstein <macklan.weinstein@gmail.com>"]
description = "Application for saving acronyms"
documentation = "https://scruffaluff.gitlab.io/acronyms"
homepage = "https://gitlab.com/scruffaluff/acronyms"
keywords = []
license = "MIT"
name = "acronyms"
packages = [
    { from = "backend", include = "acronyms" }
]
version = "0.1.0"

[tool.poetry.dependencies]
fastapi = "^0.82.0"
psycopg2 = "^2.9.0"
pydantic = "^1.10.0"
python = "^3.9.0"
SQLAlchemy = "^1.4.0"
typer = "^0.6.0"
uvicorn = {extras = ["standard"], version = "^0.18.0"}

[tool.poetry.dev-dependencies]
bandit = "^1.7.0"
black = "^22.8.0"
coverage = { version = "^6.4.0", extras = ["toml"] }
flake8 = "^5.0.0"
flake8-bugbear = "^22.8.0"
flake8-docstrings = "^1.6.0"
flake8-import-order = "^0.18.0"
mccabe = "^0.7.0"
mypy = "^0.971"
pdbpp = "^0.10.0"
playwright = "^1.25.2"
# pytest-postgresql requires psycopg, a.k.a. psycopg2 version 3, but sqlalchemy
# won't support psycopg until sqlalchemy 2.0.0.
psycopg = {extras = ["pool"], version = "^3.1.0"}
py-spy = "^0.3.0"
pytest = "^7.1.0"
pytest-cov = "^3.0.0"
pytest-mock = "^3.8.0"
pytest-playwright = "^0.3.0"
pytest-postgresql = "^4.1.0"
requests = "^2.28.0"
sqlalchemy-stubs = "^0.4"
toml = "^0.10.0"
tox = "^3.26.0"
types-requests = "^2.28.0"
types-toml = "^0.10.0"

[tool.poetry.scripts]
acronyms = "acronyms.__main__:main"

[tool.pytest.ini_options]
addopts = "--verbose -m 'not chart' --browser chromium --capture no --output tests/results --screenshot only-on-failure --video retain-on-failure"
markers = [
    "chart: Helm chart tests",
    "e2e: End to end tests",
]
python_classes = "Test*"
python_files = [
    "__init__.py",
    "test_*.py",
]
python_functions = ["test_*"]
testpaths = ["tests"]
