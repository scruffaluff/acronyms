# Python configuration file for building, dependencies, and tooling.
#
# For more information, visit
# https://snarky.ca/what-the-heck-is-pyproject-toml.

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.black]
extend-exclude = "^/template"
line-length = 80

[tool.coverage.report]
exclude_lines = [
    "if sys.version_info.*",
    "pragma: no cover",
    "raise NotImplementedError",
]
show_missing = true

[tool.coverage.run]
branch = true
command_line = "-m pytest"
omit = []
source = ["acronyms"]

[tool.mypy]
check_untyped_defs = true
disallow_untyped_calls = false
disallow_untyped_defs = true
exclude = [
    ".benchmarks/",
    ".hypothesis/",
    ".pytest_cache/",
    ".venv/",
    "dist/",
    "node_modules/",
    "src/migration/",
    "tmp/",
    "web/",
]
ignore_missing_imports = true
no_implicit_optional = true
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true

[tool.poetry]
authors = ["Macklan Weinstein <macklan.weinstein@gmail.com>"]
description = "Application for saving acronyms"
documentation = "https://scruffaluff.gitlab.io/acronyms"
homepage = "https://gitlab.com/scruffaluff/acronyms"
keywords = []
license = "MIT"
name = "acronyms"
version = "0.1.0"

[tool.poetry.dependencies]
aioredis = "^2.0.0"
aiosqlite = "^0.19.0"
asyncpg = "^0.28.0"
fastapi = "^0.103.0"
fastapi-cache2 = { extras = ["redis"], version = "^0.2.0" }
fastapi-users = { extras = ["oauth", "sqlalchemy"], version = "^12.0.0" }
psycopg = { extras = ["binary", "pool"], version = "^3.1.0" }
pydantic = "^2.0.0"
pydantic-settings = "^2.0.0"
python = "^3.9.0"
pyyaml = "^6.0.0"
redmail = "^0.6.0"
sqlalchemy = { extras = ["mypy"], version = "^2.0.0" }
uvicorn = { extras = ["standard"], version = "^0.23.0" }

[tool.poetry.group.dev.dependencies]
alembic = "^1.11.0"
bandit = "^1.7.0"
black = "^23.7.0"
coverage = { extras = ["toml"], version = "^7.3.0" }
mypy = "^1.5.0"
py-spy = "^0.3.0"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.0"
pytest-playwright = "^0.4.0"
pytest-postgresql = "^5.0.0"
ruff = ">=0.0.286,<0.1.0"
schemathesis = "^3.19.0"
toml = "^0.10.0"
types-pyyaml = "^6.0.0"
types-toml = "^0.10.0"

[tool.poetry.scripts]
acronyms = "acronyms.__main__:main"

[tool.pytest.ini_options]
addopts = """
    --verbose --browser chromium --capture no --output tests/results \
    --screenshot only-on-failure --video retain-on-failure
"""
filterwarnings = ["ignore::DeprecationWarning"]
markers = ["chart: Helm chart tests", "e2e: End to end tests"]
python_classes = "Test*"
python_files = ["__init__.py", "test_*.py"]
python_functions = ["test_*"]
testpaths = ["tests"]

[tool.ruff]
exclude = [
    ".mypy_cache/",
    ".pytest_cache/",
    ".venv/",
    "dist/",
    "node_modules/",
    "src/migration/",
    "template/",
    "tmp/",
    "web/",
]
ignore = ["B008", "D203", "D212", "E203"]
line-length = 80
# TODO: Integrate the following rules ["S", "UP"].
select = ["A", "B", "D", "C90", "E", "F", "I", "N", "Q", "RUF100", "W"]

[tool.ruff.isort]
force-sort-within-sections = true
known-first-party = ["acronyms", "tests"]
lines-after-imports = 2
